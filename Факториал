module Main where

<- наивный ->
fact :: Integer -> Integer
fact 0 = 1
fact n = n * fact (n - 1)


<- хвост рекурсивный ->
fact2 x =
  tailFact x 1
  where tailFact 0 a = a
        tailFact n a = tailFact (n - 1) (n * a)
        
<- с использованием мемоизации ->
import Timer
import Data.Time

fac :: Int -> Int
fac 0 = 0
fac 1 = 1
fac n = n * fac (n - 1)

facs :: [Int]
facs = scanl (*) 1 [1..]
ffac n = facs !! n

main = do
  displayTime (fac 10)
  displayTime (ffac 10)
  displayTime (fac 20)
  displayTime (ffac 20)
